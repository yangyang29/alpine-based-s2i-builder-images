#!/bin/bash

# restore maven dependencies downloaded in a previous build,
# so they do not have to be downloaded again.
# /tmp/artifacts will only be present in the incremental build scenario
# in which the target image name is an existing docker image which contains
# dependencies from a prior build execution.
function restore_saved_artifacts() {
  if [ "$(ls -A /tmp/artifacts/ 2>/dev/null)" ]; then
    echo -n "Restoring saved artifacts from prior build..."
    mv /tmp/artifacts/.m2 /root/
  fi
}

env

# Source code provided to S2I is at ${HOME}
LOCAL_SOURCE_DIR=${HOME}
mkdir -p $LOCAL_SOURCE_DIR


# Resulting WAR files will be deployed to $TOMCAT_HOME/webapps
DEPLOY_DIR=$TOMCAT_HOME/webapps
mkdir -p $DEPLOY_DIR

# Copy the source for compilation
cp -Rf /tmp/src/. $LOCAL_SOURCE_DIR
chgrp -R 0 $LOCAL_SOURCE_DIR
chmod -R g+rw $LOCAL_SOURCE_DIR

if [ -z "$INCREMENTAL" ]; then
  export INCREMENTAL=true
fi

if [[ "$INCREMENTAL" = "true" ]]; then
  # restore any maven dependencies which will be present if this is an
  # incremental build
  echo -n "INCREMENTAL is set to $INCREMENTAL, we are restoring cached workspace containing .m2..."
  restore_saved_artifacts
  echo " restored"

fi

pushd $LOCAL_SOURCE_DIR &> /dev/null

if [ -z "$MAVEN_ARGS" ]; then
  export MAVEN_ARGS="package -Dmaven.test.skip=true"
fi

if [ -n "$SELECTED_MODULE" ]; then
  export MAVEN_ARGS="$MAVEN_ARGS -pl $SELECTED_MODULE -am"
fi

# If MAVEN_SETTINGS specified will always add to MAVEN_ARGS
# Can be relative to application root
# Can be global to image
if [ -z "$MAVEN_SETTINGS" ]; then
  export MAVEN_ARGS="$MAVEN_ARGS -s $HOME/.m2/settings.xml"
else
  if [[ "$MAVEN_SETTINGS" = /* ]]; then
     [ ! -e "$MAVEN_SETTINGS" ] && echo "Specified settings file does not exist in the image. [$MAVEN_SETTINGS]" && exit 1
     export MAVEN_ARGS="$MAVEN_ARGS -s $MAVEN_SETTINGS"
  else
     [ ! -e "$LOCAL_SOURCE_DIR/$MAVEN_SETTINGS" ] && echo "Specified settings file does not exist in your source code. [$MAVEN_SETTINGS]" && exit 1
     export MAVEN_ARGS="$MAVEN_ARGS -s $LOCAL_SOURCE_DIR/$MAVEN_SETTINGS"
 fi
fi

#Append user provided args
if [ -n "$MAVEN_ARGS_APPEND" ]; then
  export MAVEN_ARGS="$MAVEN_ARGS $MAVEN_ARGS_APPEND"
fi

echo "Building with 'mvn ${MAVEN_ARGS}'"
mvn --version
mvn $MAVEN_ARGS

ERR=$?
if [ $ERR -ne 0 ]; then
  echo "Aborting due to error code $ERR from mvn $MAVEN_ARGS"
  exit $ERR
fi

echo -n "Cleaning $DEPLOY_DIR..."
rm -rf $DEPLOY_DIR/*
echo " cleaned up"


echo "Moving built war file into $DEPLOY_DIR for later deployment..."
if [ -z "$SELECTED_MODULE" ]; then
  mv $LOCAL_SOURCE_DIR/target/*.war $DEPLOY_DIR
else
  mv $LOCAL_SOURCE_DIR/${SELECTED_MODULE}/target/*.war $DEPLOY_DIR
fi

echo "Removing source code..."
rm -rf ./* /tmp/src/*

if [[ "$INCREMENTAL" = "false" ]]; then
  echo -n "INCREMENTAL is set to $INCREMENTAL, cleaning maven repository \"rm -rf /root/.m2\"..."
  rm -rf /root/.m2
  echo " cleaned up"
fi
popd &> /dev/null

echo "...done"

exit $rc
